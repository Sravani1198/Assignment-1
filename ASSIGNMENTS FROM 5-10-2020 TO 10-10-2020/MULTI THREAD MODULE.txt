				MULTITHREAD MODULE USING NON STATIC RETURN METHOD


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Threading;

namespace Csharp_Multithread
{
    class Program
    
    {
        public string Thread1(string str)
        {
            return "Thread1 is started";
        }
        public int Thread2(int x)
        {
            for (int i = 1; i < 10; i++)
            {
                if (i == 5)
                {
                    Console.WriteLine("The thread2 is sleeping");

                    Thread.Sleep(10000);
                }
                Console.WriteLine("The thread2 is at the position :" + i);
            }
            return x;
        }
        public string Thread3(string str)
        {
            if (str.Length > 3)
            {
                Console.WriteLine("The thread3 is sleeping");

                Thread.Sleep(5000);
            }
            return "Thread3 is started";
        }
       
        static void Main(string[] args)
        {
            Program p = new Program();
            string s = null;
            int x = 0;
            string v = null;
            //one main thread and 4 child threads
            Thread T1 = new Thread(() => { s = p.Thread1("Sramu"); });
            Console.WriteLine(s);//create the child threads wrt to methods involved
            Thread T2 = new Thread(() => { x = p.Thread2(5); });
            Console.WriteLine(x);
            Thread T3 = new Thread(() => { v = p.Thread3("Multithread concept"); });
            Console.WriteLine(v);
            T1.Start();
            T2.Start();
            T3.Start(); 
            Console.ReadLine();


        }
    }
}
